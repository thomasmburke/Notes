<Leader> is ,


Plug 'arielrossanigo/dir-configs-override.vim'
- This plugin allows for you to place a .vim.custom file anywhere which overides a .vimrc file in that folder
- Wont use

Plug 'scrooloose/nerdtree'
- Yields a directory format to view and open files
- Will use
- Commands:
" toggle nerdtree display
map <F3> :NERDTreeToggle<CR>
" open nerdtree with the current file selected
nmap ,nt :NERDTreeFind<CR>

Plug 'scrooloose/nerdcommenter
- Code Commenter
- Will use
<Leader>cc to comment a line (you can select a group of lines in visual block mode and do the same thing)
<Leader>cu to uncomment a line of block of lines in visual block mode

Plug 'majutsushi/tagbar'
map <F4>
- doesn't work won't use

Plug 'ctrlpvim/ctrlp.vim'
- fuzzy file finder
- probably just use nerdTree instead
- Wont Use

Plug 'fisadev/vim-ctrlp-cmdpalette'
- fuzzy command finder
- wont use

Plug 'mattn/emmet-vim'
-used for javascript
- wont use for now

Plug 'motemen/git-vim'
- git integration
- will use 
- repo recomended I switch to fugitive
GitAdd {filename} <LEADER>ga
GitCommit -m "" <Leader>gc
GitPush origin branchname
GitPull
GitStatus <Leader>gs 
GitCheckout
Git <args> does any git command

Plug 'kien/tabman.vim'
- navigate tabs
- will use
command is 'tf'

vim-airline/vim-airline
- in use
- bottom status bar lines

Plug 'fisadev/FixedTaskList.vim'
- will use
- summarizes TODOs in a file
- command is <Leader>t

Plug 'tpope/vim-surround'
- wont use

Plug 'Townk/vim-autoclose'
-will use
- autoclose braces

Plug 'michaeljsmith/vim-indent-object'
-wont use
- indentation tool

Plug 'jeetsukumaran/vim-indentwise'
- might use
[- : Move to previous line of lesser indent than the current line.
[+ : Move to previous line of greater indent than the current line.
]- : Move to next line of lesser indent than the current line.
]+ : Move to next line of greater indent than the current line.

Plug 'davidhalter/jedi-vim'
- will use
- python ide 
<Leader>g goto funciton (works with imports)
<Leader>o show all occurances of a funciton
<Leader>a goto assignment of a variable
K gives you pyDoc info on a function
<Leader>r change all function names
:Pyimport os (opens the os module)

Plug 'Shougo/neocomplcache.vim'
- will use
- autocompletion

Plug 'mhinz/vim-signify'
- will use
- use for git symbols

General Commands:
----------------

Visual Mode:
**********
select lines and press > to indent and < to unindents
>> indents a single line
<< unindents a single line


Changes to vimrc:
----------------
added a custom Leader key
comented out all ctrlp stuff
changed nerdtree mapping to ,nt
changed jedi goto assignment <Leader>g


Changes I want to make:
----------------------
fix backspace and figure out quick way to not take word suggester

